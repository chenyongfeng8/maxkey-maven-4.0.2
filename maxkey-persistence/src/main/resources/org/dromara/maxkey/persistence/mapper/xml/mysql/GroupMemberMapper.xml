<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.dromara.maxkey.persistence.mapper.GroupMemberMapper">

	<sql id="where_statement">
    	<if test="id != null and id != ''">
			and	id	=	#{id}
		</if> 
		<if test="name != null and name != ''">
			and name = #{name}
		</if>
    </sql>
    
    <select id="memberIn" parameterType="GroupMember" resultType="GroupMember">
			select	distinct
				gm.id as id,
				g.id as groupid,
				g.groupname,
				g.category category,
				u.username,
				u.usertype,
				u.windowsaccount,
				
				u.displayname ,
				u.nickname ,
				u.namezhspell,
				u.namezhshortspell,
				u.givenname ,
				u.middlename ,
				u.familyname ,
				
				u.gender,
	
				u.authntype,
				u.mobile,
				u.email,
				u.workemail,
				u.workphonenumber,
	
				u.employeenumber,
				u.division,
				u.costcenter,
				u.organization,
				u.departmentid,
				u.department,
				u.jobtitle,
				u.joblevel,
				
				gm.createddate,
				
				u.status
			from
				mxk_userinfo u,
				mxk_groups   g,
				mxk_group_member gm
			where	 u.instid   =   #{instId} 
			     and g.instid   =   #{instId} 
			     and gm.instid  =   #{instId} 
				<if test="groupId != null and groupId != ''">
					and gm.groupid = #{groupId}
					and g.id = #{groupId}
				</if>
				<if test="groupName != null and groupName != ''">
					and g.groupname = #{groupName}
				</if>
				<if test="username != null and username != ''">
					and u.username = #{username}
				</if>
				<if test="displayName != null and displayName != ''">
					and u.displayname   like  '%${displayName}%'
				</if>
				and	gm.type		in(	'USER','USER-DYNAMIC')
				and	gm.groupid	=	g.id	
				and	gm.memberid	=	u.id
	</select>
	
	
	<select id="memberNotIn" parameterType="GroupMember" resultType="GroupMember">
		select	distinct
			u.id,
			u.username,
			u.usertype,
			u.windowsaccount,
			
			u.displayname ,
			u.nickname ,
			u.namezhspell,
			u.namezhshortspell,
			u.givenname ,
			u.middlename ,
			u.familyname ,
			
			u.gender,

			u.authntype,
			u.mobile,
			u.email,
			u.workemail,
			u.workphonenumber,

			u.employeenumber,
			u.division,
			u.costcenter,
			u.organization,
			u.departmentid,
			u.department,
			u.jobtitle,
			u.joblevel,
			
			
			u.createdby,
			u.createddate,
			u.modifiedby,
			u.modifieddate,
			
			u.status
		from
			mxk_userinfo u
		where
			u.id not in(
       			 select gm.memberid 
       			 from 	mxk_groups g,mxk_group_member gm
			     where  1  =  1
			     <if test="groupId != null and groupId != ''">
					and gm.groupid = #{groupId}
					and g.id = #{groupId}
				</if>
				<if test="groupName != null and groupName != ''">
					and g.groupname = #{groupName}
				</if>
					and	gm.type		in(	'USER','USER-DYNAMIC')
			     	and gm.groupid	=	g.id
			)
		<if test="username != null and username != ''">
			and u.username = #{username}
		</if>
		<if test="displayName != null and displayName != ''">
			and u.displayname   like  '%${displayName}%'
		</if>
	</select>
	
	<select id="noMember" parameterType="GroupMember" resultType="Groups">
        select  distinct
            g.*
        from
            mxk_groups g
        where
            g.id not in(
                select 
                    gm.groupid 
                from mxk_group_member gm,mxk_userinfo u
                where gm.memberid = u.id
                <if test="username != null and username != ''">
		           and u.username = #{username}
		        </if>
		        <if test="memberId != null and memberId != ''">
                   and gm.memberid = #{memberid}
                </if>
            )
        <if test="groupName != null and groupName != ''">
            and g.groupname = #{groupName}
        </if>
    </select>
	
	<!-- ROLE_MEMBER  ROLE Member-->
	<select id="groupMemberInGroup" parameterType="GroupMember" resultType="Groups">
		select	distinct
			ig.*
		from
			mxk_groups ig,
			mxk_groups g,
			mxk_group_member gm
		where
			 1	=	1
			and gm.groupid	=	g.id	
			and	gm.memberid	=	ig.id
			and	gm.type		=	'ROLE'
		<if test="groupId != null and groupId != ''">
			and gm.groupid = #{groupId}
			and g.id = #{groupId}
		</if>
		<if test="groupName != null and groupName != ''">
			and g.groupname = #{groupName}
		</if>
	</select>

	<update id="addDynamicMember" parameterType="Groups" >
    	insert into mxk_group_member(
    		id,
    		groupid,
    		memberid,
    		type,
    		instid
    	)
    	select 
    		concat('${id}_',u.id) id,
    		'${id}' groupid,
    		u.id memberid,
    		'USER-DYNAMIC' type,
    		'${instId}' instid
    	from mxk_userinfo u
		where not exists(
				select  1 from mxk_group_member gm 
				where gm.groupid=#{id}
					and gm.memberid=u.id
					and gm.type='USER-DYNAMIC'
			)
		<if test="filters != null and filters != ''">
				and (${filters})
		</if>
		<if test="orgIdsList != null and orgIdsList != ''">
				and u.departmentid in( ${orgIdsList})
		</if>
    </update>
    
    <delete id="deleteDynamicMember" parameterType="Groups" >
    	delete from mxk_group_member gm
    	where type = 'user-dynamic'
    		and gm.groupid=#{id}
    		and not exists(
		    	select 1
		    	from mxk_userinfo u
		    	where 1 = 1 
		    		and u.id=gm.memberid
				<if test="filters != null and filters != ''">
						and (${filters})
				</if>
				<if test="orgIdsList != null and orgIdsList != ''">
						and u.departmentid in ( ${orgIdsList})
				</if>
			)
    </delete>
    
    <select id="queryMemberByGroupId" parameterType="string"  resultType="UserInfo">
            select  distinct
                g.groupId,
                g.groupName,
                u.id,
                u.username,
                u.usertype,
                u.windowsaccount,
                
                u.displayname ,
                u.nickname ,
                u.namezhspell,
                u.namezhshortspell,
                u.givenname ,
                u.middlename ,
                u.familyname ,
                
                u.gender,
    
                u.authntype,
                u.mobile,
                u.email,
                u.workemail,
                u.workphonenumber,
    
                u.employeenumber,
                u.division,
                u.costcenter,
                u.organization,
                u.departmentid,
                u.department,
                u.jobtitle,
                u.joblevel,
                gm.createddate,
                u.status
            from
                mxk_userinfo u,
                mxk_groups   g,
                mxk_group_member gm
            where   1   =   1
                    and gm.groupid  = #{value}
                    and g.id        = #{value}
                    and gm.type     in( 'USER','USER-DYNAMIC')
                    and gm.groupid  =   g.id    
                    and gm.memberid =   u.id
    </select>
    
    
    <delete id="deleteByGroupId" parameterType="string" >
    	delete from mxk_group_member gm
    	where  gm.groupid = #{value} and groupId != 'ROLE_ALL_USER'
    </delete>
	
</mapper>